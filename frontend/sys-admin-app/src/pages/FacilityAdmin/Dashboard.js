import React, { useState, useEffect } from "react";
import {
  Container,
  Row,
  Col,
  Card,
  Table,
  Button,
  Offcanvas,
  ListGroup,
  Spinner,
  Alert,
} from "react-bootstrap";
import {
  House,
  People,
  FileText,
  BoxArrowRight,
} from "react-bootstrap-icons";
import { useNavigate } from "react-router-dom";
import axios from "axios";

const FacilityAdminDashboard = () => {
  const [showMenu, setShowMenu] = useState(false);
  const [workers, setWorkers] = useState([]);
  const [reports, setReports] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");
  const navigate = useNavigate();

  const handleShowMenu = () => setShowMenu(true);
  const handleCloseMenu = () => setShowMenu(false);

  const handleLogout = () => {
    localStorage.removeItem("accessToken");
    navigate("/facility-admin/login");
  };

  const fetchDashboardData = async () => {
    setLoading(true);
    try {
      const token = localStorage.getItem("accessToken");

      const workersRes = await axios.get(
        "http://127.0.0.1:8000/api/facilityadmin/list-healthcare-workers/",
        { headers: { Authorization: `Bearer ${token}` } }
      );

      const reportsRes = await axios.get(
        "http://127.0.0.1:8000/api/facilityadmin/list-facility-reports/",
        { headers: { Authorization: `Bearer ${token}` } }
      );

      setWorkers(workersRes.data.data);
      setReports(reportsRes.data);
      setLoading(false);
    } catch (err) {
      console.error(err);
      setError("Failed to load dashboard data.");
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchDashboardData();
  }, []);

  return (
    <>
      <Offcanvas show={showMenu} onHide={handleCloseMenu}>
        <Offcanvas.Header closeButton>
          <Offcanvas.Title>Menu</Offcanvas.Title>
        </Offcanvas.Header>
        <Offcanvas.Body>
          <ListGroup variant="flush">
            <ListGroup.Item action href="/facility-admin/dashboard">
              <House /> Home
            </ListGroup.Item>
            <ListGroup.Item action href="/facility-admin/healthcare-workers">
              <People /> Healthcare Workers
            </ListGroup.Item>
            <ListGroup.Item action href="/facility-admin/reports">
              <FileText /> Facility Reports
            </ListGroup.Item>
            <ListGroup.Item action onClick={handleLogout}>
              <BoxArrowRight /> Logout
            </ListGroup.Item>
          </ListGroup>
        </Offcanvas.Body>
      </Offcanvas>

      <div className="bg-primary text-white p-3 d-flex justify-content-between align-items-center">
        <h3>Facility Admin Dashboard</h3>
        <Button variant="light" onClick={handleShowMenu}>
          &#9776; Menu
        </Button>
      </div>

      <Container className="py-4">
        {loading && (
          <div className="text-center py-5">
            <Spinner animation="border" />
          </div>
        )}
        {error && <Alert variant="danger">{error}</Alert>}

        {!loading && !error && (
          <>
            <Row className="mb-4">
              <Col md={6}>
                <Card>
                  <Card.Body>
                    <Card.Title>Total Healthcare Workers</Card.Title>
                    <h2>{workers.length}</h2>
                  </Card.Body>
                </Card>
              </Col>
              <Col md={6}>
                <Card>
                  <Card.Body>
                    <Card.Title>Total Reports</Card.Title>
                    <h2>{reports.length}</h2>
                  </Card.Body>
                </Card>
              </Col>
            </Row>

            <Card>
              <Card.Header>Recent Reports</Card.Header>
              <Card.Body>
                {reports.length === 0 ? (
                  <p>No reports available.</p>
                ) : (
                  <Table hover>
                    <thead>
                      <tr>
                        <th>Type</th>
                        <th>Generated By</th>
                        <th>Date</th>
                        <th>Download</th>
                      </tr>
                    </thead>
                    <tbody>
                      {reports.slice(0, 5).map((r) => (
                        <tr key={r.id}>
                          <td>{r.report_type}</td>
                          <td>{r.generated_by}</td>
                          <td>{new Date(r.generated_at).toLocaleDateString()}</td>
                          <td>
                            <a
                              href={r.report_file}
                              target="_blank"
                              rel="noreferrer"
                              className="btn btn-sm btn-outline-primary"
                            >
                              Download
                            </a>
                          </td>
                        </tr>
                      ))}
                    </tbody>
                  </Table>
                )}
              </Card.Body>
            </Card>
          </>
        )}
      </Container>
    </>
  );
};

export default FacilityAdminDashboard;